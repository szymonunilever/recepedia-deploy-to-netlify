// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Tooltip /> matches the snapshot 1`] = `
<Tooltip
  className="test-class"
  overlay="some test info"
>
  <Tooltip
    align={Object {}}
    arrowContent={null}
    className="test-class"
    destroyTooltipOnHide={false}
    mouseEnterDelay={0}
    mouseLeaveDelay={0.1}
    onVisibleChange={[Function]}
    overlay="some test info"
    overlayClassName="test-class tooltip"
    placement="right"
    prefixCls="rc-tooltip"
    trigger={
      Array [
        "hover",
      ]
    }
  >
    <Trigger
      action={
        Array [
          "hover",
        ]
      }
      afterPopupVisibleChange={[Function]}
      arrowContent={null}
      blurDelay={0.15}
      builtinPlacements={
        Object {
          "bottom": Object {
            "offset": Array [
              0,
              4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tc",
              "bc",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "bottomLeft": Object {
            "offset": Array [
              0,
              4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tl",
              "bl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "bottomRight": Object {
            "offset": Array [
              0,
              4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tr",
              "br",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "left": Object {
            "offset": Array [
              -4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "cr",
              "cl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "leftBottom": Object {
            "offset": Array [
              -4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "br",
              "bl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "leftTop": Object {
            "offset": Array [
              -4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tr",
              "tl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "right": Object {
            "offset": Array [
              4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "cl",
              "cr",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "rightBottom": Object {
            "offset": Array [
              4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "bl",
              "br",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "rightTop": Object {
            "offset": Array [
              4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tl",
              "tr",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "top": Object {
            "offset": Array [
              0,
              -4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "bc",
              "tc",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "topLeft": Object {
            "offset": Array [
              0,
              -4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "bl",
              "tl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "topRight": Object {
            "offset": Array [
              0,
              -4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "br",
              "tr",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
        }
      }
      className="test-class"
      defaultPopupVisible={false}
      destroyPopupOnHide={false}
      focusDelay={0}
      getDocument={[Function]}
      getPopupClassNameFromAlign={[Function]}
      hideAction={Array []}
      mask={false}
      maskClosable={true}
      mouseEnterDelay={0}
      mouseLeaveDelay={0.1}
      onPopupAlign={[Function]}
      onPopupVisibleChange={[Function]}
      overlay="some test info"
      popup={[Function]}
      popupAlign={Object {}}
      popupClassName="test-class tooltip"
      popupPlacement="right"
      popupStyle={Object {}}
      prefixCls="rc-tooltip"
      showAction={Array []}
    >
      <div
        className="test-class"
        key="trigger"
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        test123
      </div>
    </Trigger>
  </Tooltip>
</Tooltip>
`;
